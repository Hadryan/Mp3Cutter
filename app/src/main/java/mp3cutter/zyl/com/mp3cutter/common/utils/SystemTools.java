package mp3cutter.zyl.com.mp3cutter.common.utils;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.media.RingtoneManager;import android.net.Uri;import android.provider.MediaStore;import android.provider.Settings;import android.widget.Toast;import java.io.File;public class SystemTools {	/**	 * 设置来电铃声	 * 	 * @param path	 */	public static void setMyRingtone(String path, Context context) {		File sdfile = new File(path);		ContentValues values = new ContentValues();		values.put(MediaStore.MediaColumns.DATA, sdfile.getAbsolutePath());		values.put(MediaStore.MediaColumns.TITLE, sdfile.getName());		values.put(MediaStore.MediaColumns.MIME_TYPE, "audio/*");		values.put(MediaStore.Audio.Media.IS_RINGTONE, true);		values.put(MediaStore.Audio.Media.IS_NOTIFICATION, false);		values.put(MediaStore.Audio.Media.IS_ALARM, false);		values.put(MediaStore.Audio.Media.IS_MUSIC, false);		try {			Uri uri = MediaStore.Audio.Media.getContentUriForPath(sdfile					.getAbsolutePath());			// Uri uri =			// MediaStore.Audio.Media.getContentUriForPath(_path[position]);			Uri newUri = context.getApplicationContext().getContentResolver().insert(uri, values);			RingtoneManager.setActualDefaultRingtoneUri(context,					RingtoneManager.TYPE_RINGTONE, newUri);			Settings.System.putString(context.getContentResolver(),					Settings.System.RINGTONE, newUri.toString());		} catch (Throwable t) {			// TODO Handle exception		}		Toast.makeText(context.getApplicationContext(), "设置来电铃声成功！",				Toast.LENGTH_SHORT).show();	}	/**	 * 获取专辑封面图片	 */	public static String getAlbumPic(Context context, String musicName,			String musicPath) {		String albumid = null;		String albumPath = null;		String[] projection = new String[] { MediaStore.Audio.Media.ALBUM_ID };		Cursor cr = context.getContentResolver().query(				MediaStore.Audio.Media.EXTERNAL_CONTENT_URI, projection,				MediaStore.Audio.Media.DISPLAY_NAME + " = ?",				new String[] { musicName }, null);		while (cr.moveToNext()) {			albumid = cr.getString(cr					.getColumnIndex(MediaStore.Audio.Media.ALBUM_ID));			String[] projection2 = new String[] { MediaStore.Audio.Albums.ALBUM_ART };			Cursor cr2 = context.getContentResolver().query(					MediaStore.Audio.Albums.EXTERNAL_CONTENT_URI, projection2,					MediaStore.Audio.Albums.ALBUM_ID + " = ?",					new String[] { albumid }, null);			while (cr2.moveToNext()) {				albumPath = cr2.getString(cr2						.getColumnIndex(MediaStore.Audio.Albums.ALBUM_ART));			}		}		return albumPath;	}	private static Cursor getCursor(String filePath, Context context) {		String path = null;		Cursor c = context.getContentResolver().query(				MediaStore.Audio.Media.EXTERNAL_CONTENT_URI, null, null, null,				MediaStore.Audio.Media.DEFAULT_SORT_ORDER);		// System.out.println(c.getString(c.getColumnIndex("_data")));		if (c.moveToFirst()) {			do {				// 通过Cursor 获取路径，如果路径相同则break；				System.out.println("////////" + filePath);				path = c.getString(c						.getColumnIndexOrThrow(MediaStore.Audio.Media.DATA));				System.out.println("?????????" + path);				// 查找到相同的路径则返回，此时cursorPosition 便是指向路径所指向的Cursor 便可以返回了				if (path.equals(filePath)) {					// System.out.println("audioPath = " + path);					// System.out.println("filePath = " + filePath);					// cursorPosition = c.getPosition();					break;				}			} while (c.moveToNext());		}		// 这两个没有什么作用，调试的时候用		// String audioPath = c.getString(c		// .getColumnIndexOrThrow(MediaStore.Audio.Media.DATA));		//		// System.out.println("audioPath = " + audioPath);		return c;	}	private static String getAlbumArt(int album_id, Context context) {		String mUriAlbums = "content://media/external/audio/albums";		String[] projection = new String[] { "album_art" };		Cursor cur = context.getContentResolver().query(				Uri.parse(mUriAlbums + "/" + Integer.toString(album_id)),				projection, null, null, null);		String album_art = null;		if (cur.getCount() > 0 && cur.getColumnCount() > 0) {			cur.moveToNext();			album_art = cur.getString(0);		}		cur.close();		cur = null;		return album_art;	}	public static String getImage(String musicPath, Context context) {		Cursor currentCursor = getCursor(musicPath, context);		int album_id = currentCursor.getInt(currentCursor				.getColumnIndexOrThrow(MediaStore.Audio.Media.ALBUM_ID));		String albumArt = getAlbumArt(album_id, context);		return albumArt;	}}